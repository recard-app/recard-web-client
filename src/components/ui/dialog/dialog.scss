@use '../../../styling/globals' as *;

// === SHARED BASE STYLES ===

// Base overlay styling for both dialog types
%dialog-overlay-base {
  padding: $space-4;
  box-sizing: border-box;
}

// Base content styling for both dialog types
%dialog-content-base {
  background: $neutral-white !important;
  border-color: $neutral-gray !important;
  box-shadow: $shadow-xl !important;
  max-width: 600px;
  max-height: calc((var(--app-vh, 1vh) * 100) - ($space-8 * 2));
  display: flex;
  flex-direction: column;
  overflow: hidden; // Prevent outer scroll, inner will handle it
  padding: 0 !important; // Remove default padding

  &.full-width {
    max-width: 90vw !important;
    width: 90% !important;
  }

  &.full-screen {
    // full-screen modal takes entire viewport minus $space-8 margins
    width: calc(100vw - ($space-8 * 2));
    height: calc((var(--app-vh, 1vh) * 100) - ($space-8 * 2));
    max-width: var(--full-screen-max-width, 1000px); // fallback 1000px
    max-height: calc((var(--app-vh, 1vh) * 100) - ($space-8 * 2));
  }
}

// Mobile-only template for dialog content (fill in as needed)
@media (max-width: $mobile-breakpoint) {
   .dialog-content {
    width: calc(100vw - ($space-4 * 2));
    max-height: calc((var(--app-vh, 1vh) * 100) - ($space-4 * 2));
   }
   //.dialog-content.full-width { }
   .dialog-content.full-screen {
      width: calc(100vw - ($space-4 * 2));
      height: calc((var(--app-vh, 1vh) * 100) - ($space-4 * 2));
      max-height: calc((var(--app-vh, 1vh) * 100) - ($space-4 * 2));
    }
}

// Base inner container styling for both dialog types
%dialog-inner-base {
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow: hidden;
}

// Base header styling for both dialog types
%dialog-header-base {
  position: sticky;
  top: 0;
  z-index: 10;
  background: $neutral-white;
  border-bottom: 1px solid $neutral-light-gray;
  padding: $space-2 $space-3 $space-1-5 $space-3;
  // Reserve space on the right for the close button so it never overflows
  padding-right: calc($space-2 + 28px);
  min-height: 36px;
  display: flex;
  flex-direction: column; // stack title and description vertically
  align-items: flex-start;
  gap: $space-1;
  margin-bottom: 0;
  text-align: center;
  flex-shrink: 0; // Prevent header from shrinking

  h2 {
    font-size: $font-sm;
    font-weight: $font-bold;
    font-family: $font-inter;
    text-transform: uppercase;
    color: $primary-medium;
  }
  
  @media (min-width: 640px) {
    text-align: left;
  }

  /* Close button styling */
  .dialog-close-btn {
    position: absolute;
    top: 50%;
    right: $space-3;
    transform: translateY(-50%);
    background: none;
    border: none;
    cursor: pointer;
    padding: $space-1;
    border-radius: $radius-base;
    color: $neutral-dark-gray;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000; // ensure above header/title on mobile

    svg {
      width: $icon-mini;
      height: $icon-mini;
    }
    
    &:hover {
      background-color: $neutral-light-gray;
      color: $neutral-black;
    }
  }
}

// Base footer styling for both dialog types
%dialog-footer-base {
  position: sticky;
  bottom: 0;
  z-index: 10;
  background: $neutral-white;
  border-top: 1px solid $neutral-light-gray;
  padding: $space-4 $space-6 $space-6 $space-6;
  margin-top: 0;
  display: flex;
  flex-direction: column;
  gap: $space-3;
  flex-shrink: 0; // Prevent footer from shrinking
  
  // InfoDisplay styling - appears first (above buttons)
  .info-component {
    width: 100%;
    margin-bottom: $space-2;
    order: -1; // Ensure InfoDisplay appears first
  }
  
  // Button group for custom button ordering
  .button-group {
    display: flex;
    gap: $space-3;
    align-self: flex-end; // Align buttons to the right
    
    // Mobile responsive layout - stack buttons
    @media (max-width: 640px) {
      flex-direction: column-reverse;
      gap: $space-2;
      align-self: stretch; // Full width on mobile
    }
    
    // Desktop layout - left to right
    @media (min-width: 640px) {
      flex-direction: row;
    }
  }

  @media (max-width: $mobile-breakpoint) {
    // to fix
    .dialog-footer {
      padding: $space-1 $space-2;
    }
  }
  
  // Direct button children (fallback when not using button-group)
  > button {
    align-self: flex-end;
    
    @media (max-width: 640px) {
      align-self: stretch;
    }
  }
  
  // If there's no button-group, arrange direct buttons properly
  &:not(:has(.button-group)) {
    @media (max-width: 640px) {
      > button {
        order: 1;
      }
      
      > button:first-of-type {
        order: 2;
      }
    }
    
    @media (min-width: 640px) {
      flex-direction: row;
      justify-content: flex-end;
      align-items: flex-start;
      
      .info-component {
        flex: 1;
        margin-right: $space-3;
        margin-bottom: 0;
      }
    }
  }
}

// Base scrollable content styling for both dialog types
%dialog-scrollable-content-base {
  flex: 1;
  overflow-y: auto;
  padding: $space-4 $space-6 $space-4 $space-6;
  
  // Universal scrollbar styling
  @include universal-scrollbar;
}

@media (max-width: $mobile-breakpoint) {
  %dialog-scrollable-content-base {
    padding: 0;
  }

  // Overwrite %dialog-scrollable-content-base consumers
  .dialog-body {
    padding: $space-3 $space-2;
  }

  // Optional: full-screen variant tweaks (add rules here if needed)
}

// Mobile-only: apply the same outer padding to alert dialogs as normal dialogs
@media (max-width: $mobile-breakpoint) {
  .alert-dialog-content {
    width: calc(100vw - ($space-4 * 2));
    max-height: calc((var(--app-vh, 1vh) * 100) - ($space-4 * 2));
  }

  .alert-dialog-content.full-screen {
    width: calc(100vw - ($space-4 * 2));
    height: calc((var(--app-vh, 1vh) * 100) - ($space-4 * 2));
    max-height: calc((var(--app-vh, 1vh) * 100) - ($space-4 * 2));
  }
}

// Base title styling for both dialog types
%dialog-title-base {
  @include heading-5;
  margin: 0;
  color: $neutral-black;
  font-weight: $font-regular;
}

// Base description styling for both dialog types
%dialog-description-base {
  @include body-regular;
  margin-top: $space-2;
  color: $neutral-dark-gray;
  line-height: $leading-relaxed;
}

// Utility: visually hidden (screen-reader only)
.sr-only {
  position: absolute !important;
  height: 1px; width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}

// === DIALOG SPECIFIC STYLES ===

.dialog-overlay {
  @extend %dialog-overlay-base;
}

.dialog-content {
  @extend %dialog-content-base;
}

.dialog-inner {
  @extend %dialog-inner-base;
}

.dialog-header {
  @extend %dialog-header-base;
}

// Sticky header for drawers that reuse dialog header look
.drawer-sticky-header {
  position: sticky;
  top: 0;
  z-index: 5;
  background: $neutral-white;
  border-bottom: 1px solid $neutral-light-gray;
  padding: $space-2 $space-3 $space-1-5 $space-3;
  margin-bottom: 0;
  flex-shrink: 0;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center; // ensure title centers horizontally

  h2 {
    font-size: $font-sm;
    font-weight: $font-bold;
    font-family: $font-inter;
    text-transform: uppercase;
    color: $primary-medium;
    margin: 0;
    margin-left: auto;
    margin-right: auto;
    text-align: center;
  }

  // Ensure search bar spans full width inside the sticky header
  .search-container {
    width: 100%;
    display: block;
    margin-top: $space-1-5;

    .search-input {
      width: 100%;
      display: block;
    }
  }
}

.dialog-title {
  @extend %dialog-title-base;
}

.dialog-description {
  @extend %dialog-description-base;
}

.dialog-footer {
  @extend %dialog-footer-base;
}

// Scrollable content area for dialog body
.dialog-body {
  @extend %dialog-scrollable-content-base;
}

// Auto-apply scrollable content to children that are not header/footer
.dialog-inner > *:not(.dialog-header):not(.dialog-footer):not(.dialog-body) {
  @extend %dialog-scrollable-content-base;
}

// === ALERT DIALOG SPECIFIC STYLES ===

.alert-dialog-overlay {
  @extend %dialog-overlay-base;
}

.alert-dialog-content {
  @extend %dialog-content-base;
  max-width: 500px; // Slightly smaller for alert dialogs
}

.alert-dialog-inner {
  @extend %dialog-inner-base;
}

.alert-dialog-header {
  @extend %dialog-header-base;
}

.alert-dialog-title {
  @extend %dialog-title-base;
}

.alert-dialog-description {
  @extend %dialog-description-base;
}

.alert-dialog-footer {
  @extend %dialog-footer-base;
}

// Scrollable content area for alert dialog body
.alert-dialog-body {
  @extend %dialog-scrollable-content-base;
}

// Auto-apply scrollable content to children that are not header/footer
.alert-dialog-inner > *:not(.alert-dialog-header):not(.alert-dialog-footer):not(.alert-dialog-body) {
  @extend %dialog-scrollable-content-base;
}
