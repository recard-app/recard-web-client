@use '../../../styling/variables' as *;
@use 'sass:color';

$collapse-transition-duration: 0.15s;

.prompt-solutions-container {
  width: 100%;
  max-width: $prompt-window-max-width;
  margin: 0 auto; // Center the solutions container
  box-sizing: border-box;
  padding: 0 $space-1; // Add consistent padding
}


// TOGGLE: Mobile-only overrides for prompt input container
@media (max-width: $mobile-breakpoint) {
  .prompt-solutions-container {
    padding: 0 $space-2 0 $space-2;
  }
}

.solutions-container {
  padding: 0 $space-1;

  .solutions-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    padding: $space-1 $space-2;
    background-color: $neutral-lightest-gray;
    border: $border-half solid $neutral-gray;
    border-bottom: none;
    border-radius: $radius-base $radius-base 0 0;
    margin-bottom: 0;
    user-select: none;
    transition: background-color $transition-base;

    &:hover {
      background-color: $neutral-light-gray;
    }

    .header-title {
      display: flex;
      align-items: center;
      gap: $space-1-5;
      
      // .caps-label uses global styles from globals.scss
    }

    .collapse-button {
      background: none;
      border: none;
      padding: 0;
      color: $neutral-dark-gray;
      font-size: $font-xs;
      cursor: pointer;
      transition: color $collapse-transition-duration ease;
      display: flex;
      align-items: center;
      justify-content: center;
      
      &:hover {
        color: $neutral-black;
      }
    }
  }

  .collapsible-content {
    display: grid;
    grid-template-rows: 0fr;
    overflow: hidden;
    transition: grid-template-rows $collapse-transition-duration ease-out;
    margin: 0;
    padding: 0;
    min-height: 0;
    background-color: $neutral-lightest-gray;

    &.expanded {
      grid-template-rows: 1fr;
      padding: $space-1-5;
      transition: grid-template-rows $collapse-transition-duration ease-in;
      border: $border-half solid $neutral-gray;
      border-bottom: none;
    }

    > div {
      min-height: 0;
      margin: 0;
      padding: 0;
    }

    .solution-cards {
      min-height: 0;
      display: block;
      opacity: 0;
      transition: opacity $collapse-transition-duration ease-out;
      margin: 0;
      padding: 0;
    }

    &.expanded .solution-cards {
      opacity: 1;
      transition: opacity $collapse-transition-duration ease-in 0.1s;
    }

    &.expanded .select-different-card {
      opacity: 1;
      height: 24px;
      margin-top: $space-1;
      transition: opacity $collapse-transition-duration ease-in 0.1s, height $collapse-transition-duration ease-in, margin $collapse-transition-duration ease-in;
    }
  }

  .solution-cards {
    display: block;

      .solution-card {
        border: $border-full solid $neutral-light-gray;
        border-radius: $radius-base;
        padding: $space-1-5 $space-2;
        margin-bottom: $space-half;
        transition: all $transition-base;
        background-color: $neutral-white;
        cursor: pointer;
        display: flex;
        align-items: flex-start;
        gap: $space-2;

      // hover state intentionally minimal to keep cards calm in this section

      &.primary-solution {
        border: $border-full solid $primary-color;
          .card-header h3 {
            color: $primary-medium;
            font-weight: $font-medium;
          }
          .card-content {
            .card-details {
              p {
                color: $primary-medium;
              }
            }
          }
        }

      &.selected-card {
        border: $border-full solid $primary-color;
        background-color: $primary-lightest;
        //box-shadow: 0 2px 4px rgba($primary-color, 0.2);
        
        .card-header h3 {
          color: $primary-medium;
          font-weight: $font-semibold;
        }

        .card-content {
          .card-details {
            p {
              color: $primary-medium;
            }
          }
        }

        &.primary-solution {
          border-color: $primary-color;
          background-color: $primary-lightest;
          
          .card-header h3 {
            color: $primary-medium;
          }
        }

        .card-checkbox-container {
          display: flex;
          align-items: flex-start;
          flex-shrink: 0;
        }

        .card-content-container {
          flex: 1;
          min-width: 0;
        }
      }

      .card-header {
        display: flex;
        align-items: center;
        gap: $space-1-5;

        // Prevent card icon from shrinking
        svg {
          flex-shrink: 0;
        }

        h3 {
          margin: 0;
          font-size: $font-sm;
          font-family: $font-inter;
          font-weight: $font-medium;
          color: $neutral-black;
          display: flex;
          align-items: center;
          flex-wrap: wrap;
          gap: $space-1-5;
        }

        .recommended-badge {
          background-color: $primary-light;
          color: $primary-medium;
          font-size: $font-xxs;
          font-family: $font-inter;
          font-weight: $font-medium;
          padding: $space-half $space-2;
          border-radius: $radius-full;
          white-space: nowrap;
        }
      }

      .card-content {
        .card-details {
          p {
            margin: 0 0 $space-half 0;
            font-size: $font-xs;
            font-family: $font-inter;
            color: $neutral-dark-gray;
            line-height: $leading-normal;
            text-transform: capitalize;
            
            &:last-child {
              margin-bottom: 0;
            }
          }
        }
      }

      .use-card-button {
        padding: 0;
        width: 18px;
        height: 18px;
        border: $border-full solid $neutral-gray;
        border-radius: $radius-sm;
        background-color: $neutral-white;
        color: $neutral-black;
        cursor: pointer;
        transition: all $transition-base;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        min-width: 18px;
        min-height: 18px;

        &:hover {
          background-color: $neutral-light-gray;
          border-color: $neutral-medium-gray;
        }

        &:disabled {
          opacity: 0.6;
          cursor: not-allowed;
        }

        // Empty state (unselected)
        &:not(.selected):not(.loading) {
          border-color: $neutral-light-gray;
          background-color: transparent;
          
          &:hover {
            border-color: $neutral-gray;
            background-color: $neutral-lightest-gray;
          }
        }

        &.selected {
          background-color: $primary-color;
          color: $neutral-white;
          border-color: $neutral-light-gray;

          &:hover {
            background-color: $primary-medium;
            border-color: $neutral-light-gray;
          }
        }
      }
    }
  }

  .modal-overlay {
    .modal-content {
      padding-top: $space-3;
      
      .close-btn {
        top: $space-1;
        right: $space-3;
      }
    }
  }
}

.select-different-card {
  margin: 0;
  padding: 0;
  height: 0;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex-wrap: wrap;
  opacity: 0;
  transition: opacity $transition-base, height $transition-base, margin $transition-base;
  
  .selection-label {
    font-size: $font-xs;
    font-family: $font-inter;
    font-weight: $font-medium;
    color: $neutral-dark-gray;
    margin-right: $space-2;
  }
  
  .select-card-button {
    background-color: $neutral-white;
    border: $border-full solid $neutral-gray;
    padding: $space-1 $space-2;
    border-radius: $radius-base;
    cursor: pointer;
    font-size: $font-xs;
    font-family: $font-inter;
    font-weight: $font-medium;
    color: $neutral-black;
    transition: all $transition-base;
    display: flex;
    align-items: center;
    gap: $space-1;

    &.loading.icon.with-text {
      // Target button with all these classes: selected-card-button loading icon with-text
      font-size: $font-xs;
      padding: 3px $space-1;
      border: $border-full solid $neutral-gray;
      gap: $space-1;
      transition: none; // Disable transition to prevent flashing
      border-radius: $radius-base;

      p {
        height: 14px;
      }
    }
    
    &:hover {
      background-color: $neutral-light-gray;
      border-color: $neutral-medium-gray;
    }
    
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }

    // Ensure spinner is visible when loading
    &.loading {
      svg {
        color: $neutral-dark-gray !important;
      }
    }
  }
  
  .selected-card-button {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    background-color: $neutral-white;
    border: $border-full solid $neutral-gray;
    padding: $space-1 $space-2;
    border-radius: $radius-base;
    cursor: pointer;
    transition: all $transition-base;
    gap: $space-1;
    font-family: $font-inter;
    
    &:hover {
      background-color: $neutral-light-gray;
      border-color: $neutral-medium-gray;

      .deselect-x {
        opacity: 1;
      }
    }
    
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }

    // Ensure spinner is visible when loading
    &.loading {
      svg {
        color: $neutral-dark-gray !important;
      }
    }
    
    .selected-card-image {
      height: auto;
      width: auto;
    }
    
    .selected-card-name {
      font-size: $font-xs;
      font-weight: $font-medium;
      color: $neutral-black;
      margin-right: $space-1;
    }

    .deselect-x {
      font-size: $font-xs;
      opacity: 0.6;
      padding-left: $space-1;
      border-left: $border-full solid rgba($neutral-black, 0.1);
      transition: opacity $transition-base;
    }
  }
}

.select-purchase-card {
  padding: $space-1 0;
  display: flex;
  justify-content: flex-start;
  
  .select-purchase-card-button {
    background-color: $neutral-white;
    border: $border-full solid $neutral-gray;
    padding: $space-2 $space-3;
    border-radius: $radius-base;
    cursor: pointer;
    font-size: $font-xs;
    font-family: $font-inter;
    font-weight: $font-medium;
    color: $neutral-black;
    transition: all $transition-base;
    
    &:hover {
      background-color: $neutral-light-gray;
      border-color: $neutral-medium-gray;
    }
    
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
  }
}

.selected-card-container {
    display: flex;
    align-items: stretch;
    
    .selected-card-button {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        border-right: none;

        &.loading.icon.with-text {
            // Target button with all these classes: selected-card-button loading icon with-text
            font-size: $font-xs;
            padding: 3px $space-1;
            border: $border-full solid $neutral-gray;
            gap: $space-1;
            transition: none; // Disable transition to prevent flashing
            border-radius: $radius-base;

            p {
              height: 14px;
            }
        }
    }

    .deselect-button {
        margin: 0;
        width: $space-5;
        border: $border-full solid $neutral-gray;
        background-color: $neutral-white;
        color: $neutral-black;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: $font-xs;
        font-weight: $font-bold;
        padding: 0 $space-3;
        transition: all $transition-base;
        border-top-right-radius: $radius-base;
        border-bottom-right-radius: $radius-base;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;

        &:hover {
            background-color: $neutral-black;
            border-color: $neutral-black;
        }

        &:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
    }

    // Hide deselect button when the selected-card-button is loading
    .selected-card-button.loading + .deselect-button {
        display: none;
    }
}

// Mobile-only: prevent selected-card chip from wrapping to next line
@media (max-width: $mobile-breakpoint) {
  .select-different-card {
    flex-wrap: nowrap;
    overflow: hidden;
    gap: $space-1;
    
    .selection-label {
      flex: 0 0 auto;
      white-space: nowrap;
    }

    .selected-card-container {
      flex: 1 1 auto;
      min-width: 0; // allow inner content to shrink
    }
  }

  .selected-card-container {
    .selected-card-button {
      /* Shrink to content but cap so it doesn't wrap */
      flex: 0 1 auto;
      width: auto;
      max-width: calc(100% - #{$space-5});
      min-width: 0;
      
      .selected-card-image {
        flex-shrink: 0;
      }
      
      .selected-card-name {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        max-width: 100%;
      }
    }

    .deselect-button {
      flex: 0 0 auto;
      flex-shrink: 0;
      white-space: nowrap;
    }
  }
}