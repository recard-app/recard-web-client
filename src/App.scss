@use './styling/globals' as *;
@use './components/UniversalContentWrapper/UniversalContentWrapper';

html {
  background-color: $neutral-white;
}

// Root element styles
#root {
  height: 100%;
}

// App-specific layout styles
.app {
  display: flex;
  flex-direction: column;
  // Default: iOS-safe CSS variable (set by useViewportHeight); fallback to classic 100vh
  height: calc(var(--app-vh, 1vh) * 100);
  max-height: calc(var(--app-vh, 1vh) * 100);
  
  // If browser supports dvh, prefer it
  @supports (height: 100dvh) {
    height: 100dvh;
    max-height: 100dvh;
  }
  // Otherwise, if svh is supported, use it
  @supports (height: 100svh) {
    height: 100svh;
    max-height: 100svh;
  }
}

// Generic full-page layout system
.full-page-layout {
  display: flex;
  flex-direction: column;
  height: 100%;
  max-height: calc(var(--app-vh, 1vh) * 100);
  box-sizing: border-box;
}

// Base content area styles (shared by all variants)
%full-page-content-base {
  flex: 1;
  min-height: 0; // Crucial for flex children that need to scroll
  overflow-y: auto;
  box-sizing: border-box;
  
  // Ensure smooth scrolling
  scroll-behavior: smooth;
  
  // Modern scrollbar styling for all browsers
  scrollbar-width: thin;
  scrollbar-color: rgba($neutral-dark-gray, 0.3) transparent;
  
  // Webkit-specific thin scrollbar styling
  &::-webkit-scrollbar {
    width: 6px;
  }
  
  &::-webkit-scrollbar-track {
    background: transparent;
  }
  
  &::-webkit-scrollbar-thumb {
    background-color: rgba($neutral-dark-gray, 0.3);
    border-radius: $radius-base;
  }
}

// Main scrollable content area (default padding)
.full-page-content {
  @extend %full-page-content-base;
  padding: $space-3;
  @media (max-width: $mobile-breakpoint) {
    padding: $space-2;
  }
}

// Compact padding variant
.full-page-content--compact {
  @extend %full-page-content-base;
  padding: $space-2;
  @media (max-width: $mobile-breakpoint) {
    padding: $space-1;
  }
}

// No padding variant
.full-page-content--no-padding {
  @extend %full-page-content-base;
  padding: 0;
}

// Standard page layout for pages with PageHeader + content
.standard-page-layout {
  @extend .full-page-layout;
}

// Standard page content area (for pages that need flex containers)
.standard-page-content {
  flex: 1;
  min-height: 0; // Crucial for flex children that need to scroll
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
}

// Standard page content with padding (most common use case)
.standard-page-content--padded {
  @extend .standard-page-content;
  padding: $space-3;
  
  @media (max-width: $mobile-breakpoint) {
    padding: $space-2;
  }
}

// Standard page content with compact padding
.standard-page-content--compact {
  @extend .standard-page-content;
  padding: $space-2;
  
  @media (max-width: $mobile-breakpoint) {
    padding: $space-1;
  }
}

// Standard page content with no padding (for complex layouts)
.standard-page-content--no-padding {
  @extend .standard-page-content;
  padding: 0;
}